openapi: 3.0.0
info:
  title: Bose Smart Home API
  version: '0.2'
  description: |-
    # Bose Smart Home API
    The Bose Smart Home API is a cloud-based REST API that allows third-party developers to build applications and services that communicate with the Bose ecosystem of Smart Home products.
    ## Distributed System
    The Bose Smart Home ecosystem is a large-scale distributed system that includes Bose hardware, mobile applications, cloud components and more. <P> Any information on the state of a product that is communicated to clients (either through immediate GET operations or asynchronously) reflects the platform's current snapshot of the product's state. The state is generally updated to be accurate within user-perceptible timeframes, so users should not perceive lag between a state change on the product and it being available for your application to display. However in some cases it is possible that network errors or other factors may cause state to be updated more slowly. <P> The Smart Home ecosystem is not transactional, so developers should not assume that operations will always be performed in the order in which they are issued. Where ordering is important, client code should wait for an acknowledgement that a previous operation has succeeded before attempting another. <P> Similarly, changes to the ecosystem as a whole may take time to propagate. For example, if a user changes a product's name or adds a new product to their account using the Bose Music app, that update may not be immediately available to all clients. <P> Finally, developers should always assume that multiple applications could be accessing or  controlling a product at any time, and that users may interact directly with a product (say, by pressing buttons on the product, or by using a remote control). We do not make any guarantees around race conditions; the fact that a command succeeded and changed a product's state does not mean that another user or application won't immediately override that change. Clients should monitor for all state changes that they care about, regardless of whether their application initiated them.
    ## Endpoint Security
    There is a set of required metadata that must be provided in the headers of every request to the API (as well as any operation-specific headers that are described in each endpoint's documentation).
    ### API Key
    The `X-ApiKey` header must contain a valid API Key, issued by the Bose Developer Portal (TODO: Link to an application registration guide). A single developer may have many API keys, one for each application that they create. While the API key is not considered to be a secure token (since it may be have to be distributed in client-side code where it could be reverse engineered), it is advisable to limit the exposure of your API key since it may be used to determine per-application quotas such as rate limiting.
    ### User Authentication
    Every request to the API must be made on behalf of an authenticated user who has given your application permission to access their products. See the Authentication Guide (TODO: Link) for details on how to authenticate users to the Bose Smart Home ecosystem. <P> The authentication token obtained when the user authenticates for your application must be passed in the `X-User-Token` request header. Bear in mind that user tokens may expire resulting in a 403 (Forbidden) response, or in an asynchronous failure response. Application developers must be prepared to refresh expired tokens as described in the Authentication Guide. <P> Since the user token allows an API client to perform actions for a Bose user, you are expected to make every effort to protect user tokens. (TODO: link to Auth guide/additional requirements on this topic).
    ### User-Agent Header
    The Bose Smart Home API requires that all requests be accompanied by a `User-Agent` header. The header is documented in each API endpoint, and must follow the pattern:

      `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

    ### API Version
    Bose tries hard to avoid changing the API in breaking ways (i.e. any changes that could cause older clients to behave differently). However we are also aware that sometimes technical, regulatory or other concerns may force us to make backward-incompatible changes. The API versioning strategy is described in detail in the Versioning and Deprecation Policy (TODO - link). <P> As part of that versioning strategy, all API calls are required to pass the major API version that they use in the `X-Api-Version` header. This header will be used to handle the request in a backward-compatible way if the API version is still supported under the deprecation policy, or to reject the request if the API version is no longer available. <P> Note that only the major version should be passed in the header. Minor API revisions are, by definition, backward compatible and so do not have to be specified.
    ## Communication Patterns
    The Smart Home API uses both synchronous responses where the server returns a result immediately in response to a request (the standard REST interaction model), and asynchronous messaging where the server initiates a call back to the client. These callbacks may indicate the outcome of a long-running operation that was initiated by the client, or may notify the client of some external event that changed the state of the system. <P> Asynchronous messages are delivered via webhooks. API clients are responsible for maintaining a server that can handle incoming messages from the Smart Home API service. The mechanisms and the expected behavior for webhook clients are described in the [Asynchronous Messaging Guide] (https://developer.bose.com/guides/smart-home-api/best-practices).
    ### GET Requests
    API clients can obtain the state of the system by issuing standard REST GET requests. These return immediately, with the latest known state of the product. Clients should be aware that any data returned in response to these requests represents the last known state of the product. The data may be stale if the product is not reachable, or if the state has changed very recently.
    ### POST Requests
    The API uses POST operations to update the state or configuration of a product. In most cases, API commands that modify the state of a Bose product execute within the range of user perception, but not immediately. Rather than waiting for a command to succeed or fail before returning, we  instead create a background task that sends one or more messages to indicate its status.
    When a client attempts to update a product, they should expect two types of response:
      - A synchronous response that indicates whether the command was initiated.
        This is delivered via the status code and body returned in response to
        the REST request. A successful response means only that the command was
        accepted - not that it has executed.
      - One or more asynchronous responses that indicate the status of the
        command. The details of the responses that will be sent are described in
        the specification of each API endpoint. In most cases there is a single
        asynchronous response that indicates the success or failure of the
        command.
    <P> Asynchronous responses are sent only to the client that initiated the command. <P> A command request has been successfully acknowledged if the response from the server has an HTTP status code of `202 (Accepted)`. In this case the response will include the `X-Request-ID` header, which contains a globally-unique ID for the command. All subsequent asynchronous responses will include the same `X-Request-ID` header, allowing clients to track which response is associated with which request.

    ## API Organization
    The data and endpoints of the Bose Smart Home API is divided into several namespaces, designated by Open API tags. Endpoints, schemas and callbacks within each namespace are closely-related concepts and functionality that handle some aspect of the product's functionality or management. For example, the Content namespace contains operations that modify and report on the primary audio that is playing on the product, while the Products namespace contains the operations that allow a client to access the set of Bose products and accounts associated with a user. <P> In general, clients can expect endpoints, schemas and callbacks within a given namespace to behave consistently with one another. For example, all Content callbacks will contain a Now Playing data structure. See the description for each namespace for details on the behavior for that endpoint.
tags:
  - name: Products
    description: 'Operations related to the set of Bose products available to the current user, as well as the presets associated with those products.'
  - name: Settings
    description: 'The setttings group contains data and operations related to the global settings of the product (i.e. those settings that do not change based on the currently-playing content). These include the product''s audio settings, its firmware version, it current network connectivity state, and so on. <P> Settings are retrieved and notified on as a group, with a common payload delivered in the product settings sub-object, and by any asynchronous notifications that are triggered by state changes. However, those aspects of the settings that can be updated via the API are modified individually. A client must send discrete update requests for each property that it wishes to change, rather than sending a single payload containing the full updated state. This prevents race conditions where the whole product settings have to be replaced in order to update a single value. <P> Not all properties of a product''s settings can be modified via the API. For example, the API will never allow a client to disconnect a product from the network.'
  - name: Content
    description: 'Operations related to the content playing on a product. All endpoints in the Content group fetch or modify the Now Playing state, and the POST operations all lead to a Content.NowPlaying notification.'
  - name: Notifications
    description: Operations related to alerts and notifications that can be relayed to the product.
servers:
  - url: 'https://preview.partners.api.bose.io'
    description: Bose API server
security:
  - App API Key: []
  - User Token: []
paths:
  /products:
    get:
      operationId: listProducts
      summary: List Products
      tags:
        - Products
      description: List the Bose products available to the current user
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
      responses:
        '200':
          description: 'A paginated list of the Bose products available to the current user. <P> The data objects returned by this endpoint contain a summary of the information available for a given product. Clients that wish to obtain more information about an individual product should call `/products/{productID}`.'
          content:
            application/json:
              schema:
                title: ProductList
                type: object
                properties:
                  results:
                    type: array
                    items:
                      title: ProductSummary
                      type: object
                      description: Summary of the information about a single product. More information is available by querying for a specific product.
                      properties:
                        connectionStatus:
                          description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                          type: string
                          example: CONNECTED
                          enum:
                            - CONNECTED
                            - DISCONNECTED
                        productID:
                          description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
                          example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
                          type: string
                        productName:
                          description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
                          example: Kitchen Speaker
                          type: string
                  nextPageUrl:
                    type: string
                    description: |
                      A relative URL pointing to the next page of results. This link
                      contains all the information that a client will need to pass in
                      order to fetch the next set of results, and should not be parsed
                      or modified.
                      <P>
                      This link is present only if a later page of results exists. If the
                      response does not include this link, clients should assume that
                      the current page is the last page of results.
                      <P>
                      The API does not guarantee that the set of pages returned by
                      traversing next and previous lists will be consistent or complete
                      in the face of concurrent modifications. If a product is added or
                      removed between list calls, the result set may be missing products
                      or may contain the same product more than once.
                  previousPageUrl:
                    type: string
                    description: |
                      A relative URL pointing to the previous page of results. This link
                      contains all the information that a client will need to pass in
                      order to fetch the next set of results, and should not be parsed
                      or modified.
                      <P>
                      This link is present only if a previous page of results exists. If
                      the response does not include this link, clients should assume that
                      the current page is the first page of results.
                      <P>
                      The API does not guarantee that the set of pages returned by
                      traversing next and previous lists will be consistent or complete
                      in the face of concurrent modifications. If a product is added or
                      removed between list calls, the result set may be missing products
                      or may contain the same product more than once.
                required:
                  - results
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
  '/products/{productID}':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    get:
      operationId: getProduct
      summary: Get Product
      tags:
        - Products
      description: 'Get information on a single Bose product. This product must be accessible to the current user. TODO: Add a link to some external documentation on product ownership'
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
      responses:
        '200':
          description: Information about a specific Bose product
          content:
            application/json:
              schema:
                title: Product
                type: object
                properties:
                  settings:
                    title: Settings
                    type: object
                    properties:
                      connectionStatus:
                        description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                        type: string
                        example: CONNECTED
                        enum:
                          - CONNECTED
                          - DISCONNECTED
                      firmwareVersion:
                        description: The firmware version currently installed on the product.
                        type: string
                        example: 4.1.1-6679+cb4c111
                      mute:
                        description: 'The current mute setting. A product with a mute status of `ON` will continue to play the current content, but behaves as though the volume were set to zero. When mute is disabled (either via the Smart Home API or by some other user interaction) the product will play content at its current volume. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                        type: string
                        example: 'OFF'
                        enum:
                          - 'ON'
                          - 'OFF'
                      productName:
                        description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
                        example: Kitchen Speaker
                        type: string
                      power:
                        description: The current power setting. This field will not be present in the response payload if the product is not currently reachable by the cloud (i.e. if the `connectionStatus` property is set to `DISCONNECTED`). <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.
                        type: string
                        enum:
                          - 'ON'
                          - STANDBY
                      volume:
                        description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
                        type: integer
                        example: 11
                  productID:
                    description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
                    example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
                    type: string
                  capabilities:
                    title: ProductCapabilities
                    type: object
                    properties:
                      canAudioNotify:
                        type: boolean
                        description: Boolean flag indicating whether the product has the ability to play audio notifications.
                      canMute:
                        type: boolean
                      hasPresets:
                        type: boolean
                      supportedPowerSettings:
                        type: array
                        items:
                          type: string
                          enum:
                            - 'ON'
                            - STANDBY
                      volumeMax:
                        description: 'The maximum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
                        type: integer
                        format: int32
                        example: 100
                      volumeMin:
                        description: 'The minimum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
                        type: integer
                        format: int32
                        example: 0
                    required:
                      - canAudioNotify
                      - volumeMax
                      - volumeMin
                required:
                  - settings
                  - nowPlaying
                  - presets
                  - productID
                  - capabilities
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
  '/products/{productID}/settings/mute':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: setMute
      summary: Change Mute Setting
      tags:
        - Settings
      description: 'Send a request to change the speaker mute setting. This call will return immediately with a success or failure code indicating whether the request was accepted. At some point later, an asynchronous response will be send indicating whether the mute change request was successful.'
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter. Document that TOGGLE is best-effort.
        required: true
        content:
          application/json:
            schema:
              title: MuteRequest
              type: object
              properties:
                mute:
                  type: string
                  enum:
                    - 'ON'
                    - 'OFF'
                    - TOGGLE
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/settings/power':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: setPower
      summary: Change Power Setting
      tags:
        - Settings
      description: 'Send a request to change the speaker power setting. This call will return immediately with a success or failure code indicating whether the request was accepted. At some point later, an asynchronous response will be send indicating whether the power setting change request was successful.'
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter. Document that TOGGLE is best-effort.
        required: true
        content:
          application/json:
            schema:
              title: PowerRequest
              type: object
              properties:
                power:
                  type: string
                  enum:
                    - 'ON'
                    - STANDBY
                    - TOGGLE
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/settings/volume':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: setVolume
      summary: Change Volume
      tags:
        - Settings
      description: 'Send a request to change the speaker volume. This call will return immediately with a success or failure code indicating whether the request was accepted. At some point later, an asynchronous response will be send indicating whether the volume change request was successful.'
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter
        required: true
        content:
          application/json:
            schema:
              title: VolumeRequest
              type: object
              properties:
                volume:
                  description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
                  type: integer
                  example: 11
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/content':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    get:
      operationId: getNowPlaying
      summary: Get Now Playing
      tags:
        - Content
      description: 'Get the most recent now playing information available for this product. This value is expected to be accurate within a few seconds, but is not guaranteed to exactly represent the content if it has recently changed.'
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
      responses:
        '200':
          description: The latest known content playing information.
          content:
            application/json:
              schema:
                type: object
                title: NowPlaying
                description: |-
                  A representation of the content that is currently playing on a product. This data structure may either be retrieved synchronously by making an API call, or be delivered asynchronously as part of an event.
                  The Now Playing data structure includes four top-level elements:
                    - the `container` describes the capabilities and properties of the
                    containt container. A container may be a playlist, an album, a radio
                    station or so on.
                    - the `metadata` gives information about the specific content item
                    that is playing. If the `container` element of a given Now Playing
                    structure describes a playlist or album, the `metadata` element would
                    describe an individual track.
                    - the `source` describes the input from which the content originates,
                    such as an online audio stream, a bluetooth connection, or similar.
                    - the `currentState` describes the playback settings of the product, as well
                    as the capabilities that control which state transitions are available
                    for the current content.

                  When determining whether an operation is valid during playback, both the capabilities in the `container` and the `currentState` elements must be considered. An operation may be performed only if both the container and the current state allow it (i.e. the capability is a logical `AND` of the two boolean values). The API provides both values to allow clients to make decisions at both a global and a local level. For example, a GUI may choose whether to draw a 'next' button depending on the value of the `skipNextSupported` property in the `container` object, but may then indicate that the button is inactive in cases where `canSkipNext` in the `currentState` is `false` (such as when playing the final track in a playlist).
                properties:
                  container:
                    type: object
                    title: NowPlayingContainer
                    properties:
                      capabilities:
                        type: object
                        title: NowPlayingCapabilities
                        properties:
                          repeatSupported:
                            description: Capability indicating whether the container may be played on repeat.
                            type: boolean
                            example: true
                          shuffleSupported:
                            type: boolean
                            example: true
                          skipNextSupported:
                            type: boolean
                            example: false
                          skipPreviousSupported:
                            type: boolean
                            example: false
                      containerArt:
                        type: string
                        example: 'https://images.example.com/container.png'
                      containerName:
                        type: string
                        example: SPOTIFY
                  metadata:
                    title: NowPlayingTrackMetadata
                    type: object
                    properties:
                      album:
                        type: string
                        example: Magical Mystery Tour (Remastered)
                      artist:
                        type: string
                        example: The Beatles
                      trackName:
                        type: string
                        example: Penny Lane - Remastered 2009
                      trackArt:
                        type: string
                        example: 'https://images.example.com/track.png'
                  source:
                    title: NowPlayingSource
                    type: object
                    properties:
                      sourceDisplayName:
                        type: string
                        example: Spotify
                      sourceDisplayIcon:
                        type: string
                        example: 'https://images.example.com/img.png'
                  currentState:
                    title: NowPlayingState
                    type: object
                    properties:
                      canPause:
                        type: boolean
                        example: true
                      canSkipNext:
                        type: boolean
                        example: true
                      canSkipPrevious:
                        type: boolean
                        example: true
                      canShuffle:
                        type: boolean
                        example: true
                      canStop:
                        type: boolean
                        example: false
                      repeat:
                        type: string
                        enum:
                          - ONE
                          - ALL
                          - 'OFF'
                          - NOT_APPLICABLE
                        example: 'OFF'
                      shuffle:
                        type: string
                        enum:
                          - 'ON'
                          - 'OFF'
                          - NOT_APPLICABLE
                        example: 'OFF'
                      playbackStatus:
                        type: string
                        enum:
                          - PLAY
                          - PAUSED
                          - STOPPED
                          - BUFFERING
                          - ERROR
                        example: PLAY
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
  '/products/{productID}/content/control':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: control
      summary: Control the product
      tags:
        - Content
      description: Change the playback state of a product.
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter
        required: true
        content:
          application/json:
            schema:
              title: ControlRequest
              type: object
              properties:
                command:
                  type: string
                  enum:
                    - RESUME
                    - PAUSE
                    - RESUME_PAUSE_TOGGLE
                    - SKIP_NEXT
                    - SKIP_PREVIOUS
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/content/repeat':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: repeat
      summary: Set Repeat
      tags:
        - Content
      description: Set the current content source to repeat (if available).
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter
        required: true
        content:
          application/json:
            schema:
              title: RepeatRequest
              type: object
              properties:
                repeat:
                  type: string
                  enum:
                    - ONE
                    - ALL
                    - 'OFF'
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/content/shuffle':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: shuffle
      summary: Set Shuffle
      tags:
        - Content
      description: Set the current content source to shuffle (if available).
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      requestBody:
        description: Description of the body parameter
        required: true
        content:
          application/json:
            schema:
              title: ShuffleRequest
              type: object
              properties:
                shuffle:
                  type: string
                  enum:
                    - 'ON'
                    - 'OFF'
                    - TOGGLE
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/content/notify':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    post:
      operationId: playAudioNotification
      summary: Play an Audio Notification
      tags:
        - Notifications
      description: Play an audio notification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: AudioNotificationRequest
              type: object
              properties:
                url:
                  description: A URL pointing to an audio file that will be played. The file at this URL must be publicly-accessible.
                  example: 'https://example.com/notification.mp3'
                  type: string
                volumeOverride:
                  description: 'The volume level at which the notification is played. This value is optional; if no volume is supplied then the notification will play at the same volume as the current content. If the product is muted, the audio notification will not play.'
                  type: integer
                  format: int32
              required:
                - url
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: audioNotificationAsyncResponse
              description: |
                Asynchronous event generated in response to an audio notification
                playback request. This response is sent only to the client that
                created the original request.
              requestBody:
                description: Event payload
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This
                        message will be generated at some point after a request
                        was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          description: The dynamic type of this response. This property allows clients to parse and interpret the remainder of the fields in the object.
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          type: object
                          properties:
                            code:
                              type: string
                              description: |
                                Value indicating the specific error cause.

                                * `BUSY`: The notification failed (or was not started) because higher-priority content, such as a VPA or other notification, was already playing.
                                * `UNEXPECTED_ERROR`: The notification failed (or was not started) due to some unknown issue.
                                <P>
                                Not all media types are supported; a future
                                release of the SmartHome API will include an error
                                code indicating that an unsupported media type
                                was supplied.
                              enum:
                                - BUSY
                                - UNEXPECTED_ERROR
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
        Response.PlaybackComplete:
          /responses:
            post:
              operationId: audioNotificationPlaybackEnd
              description: 'Asynchronous event generated in to indicate that a previously-created audio notification has stopped playing. The notification may have completed successfully or failed due to being interrupted, overridden or some other error. Developers should check the callback body for details on the conditions under which the playback ended. <P> This response is sent only to the client that created the original request. <P> Note that delivery of this response is not guaranteed; unexpected issues such as power failure or network errors may lead to a notification playback ending without an associated message. Developers should assume failure if an audio notification request times out without a callback.'
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AudioNotificationPlaybackEnd
                      type: object
                      description: 'Information on the circumstances under which an audio notification ended. If the notification successfully played to completion, the status property will indicate `SUCCESS`, and the `details` property will not be present. In all other cases, the `details` property will contain a description of the unexpected termination.'
                      properties:
                        type:
                          type: string
                          description: The dynamic type of this response. This property allows clients to parse and interpret the remainder of the fields in the object.
                          enum:
                            - Response.PlaybackComplete
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          type: object
                          properties:
                            code:
                              type: string
                              description: |
                                Value indicating the specific error cause.

                                * `INTERRUPTED`: The notification started but was interrupted due to user action or higher priority sound (e.g. VPA request or alarm).
                                * `UNEXPECTED_ERROR`: The notification failed due to some unknown issue.
                              enum:
                                - INTERRUPTED
                                - UNEXPECTED_ERROR
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
  '/products/{productID}/presets':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
    get:
      operationId: listPresets
      summary: List Presets
      tags:
        - Content
      description: List the presets available to the current user on this product.
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
      responses:
        '200':
          description: The presets available to a user on a Bose product
          content:
            application/json:
              schema:
                title: PresetMap
                type: object
                properties:
                  '1':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                  '2':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                  '3':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                  '4':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                  '5':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                  '6':
                    title: Preset
                    type: object
                    properties:
                      image:
                        type: string
                      name:
                        type: string
                      presetID:
                        type: string
                      source:
                        type: string
                    required:
                      - name
                      - presetID
                      - source
                example:
                  '1':
                    image: string
                    name: string
                    presetID: '1'
                    source: SPOTIFY
                  '2': null
                  '3':
                    image: string
                    name: string
                    presetID: '3'
                    source: PANDORA
                  '4': null
                  '5': null
                  '6': null
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
  '/products/{productID}/presets/{presetID}':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
      - name: presetID
        in: path
        required: true
        description: Description of the preset ID
        schema:
          type: string
    get:
      operationId: getPreset
      summary: Get Preset
      tags:
        - Content
      description: Get a single preset for the product.
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
      responses:
        '200':
          description: Information about a specific preset
          content:
            application/json:
              schema:
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
  '/products/{productID}/presets/{presetID}/play':
    parameters:
      - name: productID
        in: path
        required: true
        description: Description of the product ID
        schema:
          type: string
      - name: presetID
        in: path
        required: true
        description: Description of the preset ID
        schema:
          type: string
    post:
      operationId: playPreset
      summary: Play Preset
      tags:
        - Content
      description: Play a preset on the product.
      parameters:
        - name: User-Agent
          in: header
          required: true
          example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
          description: |-
            A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

              `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

            The OS and Library identifiers are optional, but recommended.
          schema:
            type: string
        - name: X-API-Version
          in: header
          required: true
          example: '1'
          description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
          schema:
            type: string
        - name: X-Request-State
          in: header
          required: false
          description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
          schema:
            type: string
      responses:
        '202':
          description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            X-Request-ID:
              required: true
              description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
              schema:
                type: string
            X-Request-State:
              required: false
              description: Any custom state passed by the client in the X-Request-State header.
              schema:
                type: string
        '400':
          description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. For example, an
                      error caused by a missing required parameter may include the
                      name of the parameter that was missing.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '401':
          description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of an
                      Unauthorized error, this message will include the name of any
                      missing headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is required.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '403':
          description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Forbidden error, this message will include the name of any
                      invalid headers.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Header "X-User-Token" is invalid.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '404':
          description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. In the case of a
                      Not Found error, this message will indicate which resource was
                      not accessible.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
        '429':
          description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '500':
          description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
                  message:
                    type: string
                    description: |
                      A developer-facing message indicating the cause of an error
                      and potentially suggesting ways to fix it. This message may
                      include information that would be useful when working with
                      Bose support to debug a persistent error.
                      <P>
                      This message should not be displayed directly to the end user.
                    example: Unexpected error 10.32 occurred. Please contact support.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
        '503':
          description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: |
                      A code that indicates the specific error that occurred. This code is
                      generally more specific than the HTTP response code, and can be used
                      to debug the source of an error.
                    example: '10.32'
                  guid:
                    type: string
                    description: |
                      A unique ID that is associated with the API request. This ID should
                      be provided when working with Bose support to debug any specific API
                      errors.
                    example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
                  documentationUrl:
                    type: string
                    example: 'https://example.com/errors/10.32'
                    description: |
                      A reference to the API documentation offering more information about
                      the specific error, including debug steps and any workarounds.
          headers:
            X-API-Warn:
              required: false
              description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
              schema:
                type: string
            Retry-After:
              required: true
              description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
              schema:
                type: string
            X-Retry-Count:
              required: true
              description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
              schema:
                type: string
            X-Retry-Behavior:
              required: true
              description: |
                This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
              schema:
                type: string
      callbacks:
        Response.Status:
          /responses:
            post:
              operationId: asyncResponse
              description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
              requestBody:
                content:
                  application/json:
                    schema:
                      title: AsynchronousResponse
                      type: object
                      description: |
                        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                      properties:
                        type:
                          type: string
                          enum:
                            - Response.Status
                        status:
                          type: string
                          enum:
                            - FAILURE
                            - SUCCESS
                        error:
                          title: AsynchronousCommandError
                          properties:
                            code:
                              type: string
                              description: Description of the error code scheme
                            message:
                              type: string
                              description: |
                                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                            documentationUrl:
                              type: string
                              description: |
                                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                          required:
                            - code
                            - message
                            - documentationUrl
                      required:
                        - status
                        - type
              parameters:
                - name: X-API-Version
                  in: header
                  required: true
                  example: '1'
                  description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
                  schema:
                    type: string
                - name: X-Request-ID
                  in: header
                  required: true
                  description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
                  schema:
                    type: string
                - name: X-Request-State
                  in: header
                  required: false
                  description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
                  schema:
                    type: string
                - name: X-Bose-Token
                  in: header
                  required: false
                  description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
                  schema:
                    type: string
                - name: X-Product-ID
                  in: header
                  required: true
                  description: Description of the product ID
                  schema:
                    type: string
                - name: X-User-ID
                  in: header
                  required: true
                  description: Description of the user ID
                  schema:
                    type: string
              responses:
                '204':
                  description: Response from the webhook server to indicate that the data was received.
components:
  schemas:
    AsynchronousResponse:
      title: AsynchronousResponse
      type: object
      description: |
        Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
      properties:
        type:
          type: string
          enum:
            - Response.Status
        status:
          type: string
          enum:
            - FAILURE
            - SUCCESS
        error:
          title: AsynchronousCommandError
          properties:
            code:
              type: string
              description: Description of the error code scheme
            message:
              type: string
              description: |
                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
            documentationUrl:
              type: string
              description: |
                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
          required:
            - code
            - message
            - documentationUrl
      required:
        - status
        - type
    AsynchronousCommandError:
      title: AsynchronousCommandError
      properties:
        code:
          type: string
          description: Description of the error code scheme
        message:
          type: string
          description: |
            A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
        documentationUrl:
          type: string
          description: |
            A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
      required:
        - code
        - message
        - documentationUrl
    ProductList:
      title: ProductList
      type: object
      properties:
        results:
          type: array
          items:
            title: ProductSummary
            type: object
            description: Summary of the information about a single product. More information is available by querying for a specific product.
            properties:
              connectionStatus:
                description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                type: string
                example: CONNECTED
                enum:
                  - CONNECTED
                  - DISCONNECTED
              productID:
                description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
                example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
                type: string
              productName:
                description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
                example: Kitchen Speaker
                type: string
        nextPageUrl:
          type: string
          description: |
            A relative URL pointing to the next page of results. This link
            contains all the information that a client will need to pass in
            order to fetch the next set of results, and should not be parsed
            or modified.
            <P>
            This link is present only if a later page of results exists. If the
            response does not include this link, clients should assume that
            the current page is the last page of results.
            <P>
            The API does not guarantee that the set of pages returned by
            traversing next and previous lists will be consistent or complete
            in the face of concurrent modifications. If a product is added or
            removed between list calls, the result set may be missing products
            or may contain the same product more than once.
        previousPageUrl:
          type: string
          description: |
            A relative URL pointing to the previous page of results. This link
            contains all the information that a client will need to pass in
            order to fetch the next set of results, and should not be parsed
            or modified.
            <P>
            This link is present only if a previous page of results exists. If
            the response does not include this link, clients should assume that
            the current page is the first page of results.
            <P>
            The API does not guarantee that the set of pages returned by
            traversing next and previous lists will be consistent or complete
            in the face of concurrent modifications. If a product is added or
            removed between list calls, the result set may be missing products
            or may contain the same product more than once.
      required:
        - results
    Product:
      title: Product
      type: object
      properties:
        settings:
          title: Settings
          type: object
          properties:
            connectionStatus:
              description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
              type: string
              example: CONNECTED
              enum:
                - CONNECTED
                - DISCONNECTED
            firmwareVersion:
              description: The firmware version currently installed on the product.
              type: string
              example: 4.1.1-6679+cb4c111
            mute:
              description: 'The current mute setting. A product with a mute status of `ON` will continue to play the current content, but behaves as though the volume were set to zero. When mute is disabled (either via the Smart Home API or by some other user interaction) the product will play content at its current volume. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
              type: string
              example: 'OFF'
              enum:
                - 'ON'
                - 'OFF'
            productName:
              description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
              example: Kitchen Speaker
              type: string
            power:
              description: The current power setting. This field will not be present in the response payload if the product is not currently reachable by the cloud (i.e. if the `connectionStatus` property is set to `DISCONNECTED`). <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.
              type: string
              enum:
                - 'ON'
                - STANDBY
            volume:
              description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
              type: integer
              example: 11
        productID:
          description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
          example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
          type: string
        capabilities:
          title: ProductCapabilities
          type: object
          properties:
            canAudioNotify:
              type: boolean
              description: Boolean flag indicating whether the product has the ability to play audio notifications.
            canMute:
              type: boolean
            hasPresets:
              type: boolean
            supportedPowerSettings:
              type: array
              items:
                type: string
                enum:
                  - 'ON'
                  - STANDBY
            volumeMax:
              description: 'The maximum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
              type: integer
              format: int32
              example: 100
            volumeMin:
              description: 'The minimum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
              type: integer
              format: int32
              example: 0
          required:
            - canAudioNotify
            - volumeMax
            - volumeMin
      required:
        - settings
        - nowPlaying
        - presets
        - productID
        - capabilities
    ProductSummary:
      title: ProductSummary
      type: object
      description: Summary of the information about a single product. More information is available by querying for a specific product.
      properties:
        connectionStatus:
          description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
          type: string
          example: CONNECTED
          enum:
            - CONNECTED
            - DISCONNECTED
        productID:
          description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
          example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
          type: string
        productName:
          description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
          example: Kitchen Speaker
          type: string
    ProductCapabilities:
      title: ProductCapabilities
      type: object
      properties:
        canAudioNotify:
          type: boolean
          description: Boolean flag indicating whether the product has the ability to play audio notifications.
        canMute:
          type: boolean
        hasPresets:
          type: boolean
        supportedPowerSettings:
          type: array
          items:
            type: string
            enum:
              - 'ON'
              - STANDBY
        volumeMax:
          description: 'The maximum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
          type: integer
          format: int32
          example: 100
        volumeMin:
          description: 'The minimum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
          type: integer
          format: int32
          example: 0
      required:
        - canAudioNotify
        - volumeMax
        - volumeMin
    PresetMap:
      title: PresetMap
      type: object
      properties:
        '1':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
        '2':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
        '3':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
        '4':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
        '5':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
        '6':
          title: Preset
          type: object
          properties:
            image:
              type: string
            name:
              type: string
            presetID:
              type: string
            source:
              type: string
          required:
            - name
            - presetID
            - source
      example:
        '1':
          image: string
          name: string
          presetID: '1'
          source: SPOTIFY
        '2': null
        '3':
          image: string
          name: string
          presetID: '3'
          source: PANDORA
        '4': null
        '5': null
        '6': null
    Preset:
      title: Preset
      type: object
      properties:
        image:
          type: string
        name:
          type: string
        presetID:
          type: string
        source:
          type: string
      required:
        - name
        - presetID
        - source
    Settings:
      title: Settings
      type: object
      properties:
        connectionStatus:
          description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
          type: string
          example: CONNECTED
          enum:
            - CONNECTED
            - DISCONNECTED
        firmwareVersion:
          description: The firmware version currently installed on the product.
          type: string
          example: 4.1.1-6679+cb4c111
        mute:
          description: 'The current mute setting. A product with a mute status of `ON` will continue to play the current content, but behaves as though the volume were set to zero. When mute is disabled (either via the Smart Home API or by some other user interaction) the product will play content at its current volume. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
          type: string
          example: 'OFF'
          enum:
            - 'ON'
            - 'OFF'
        productName:
          description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
          example: Kitchen Speaker
          type: string
        power:
          description: The current power setting. This field will not be present in the response payload if the product is not currently reachable by the cloud (i.e. if the `connectionStatus` property is set to `DISCONNECTED`). <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.
          type: string
          enum:
            - 'ON'
            - STANDBY
        volume:
          description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
          type: integer
          example: 11
    MuteRequest:
      title: MuteRequest
      type: object
      properties:
        mute:
          type: string
          enum:
            - 'ON'
            - 'OFF'
            - TOGGLE
    PowerRequest:
      title: PowerRequest
      type: object
      properties:
        power:
          type: string
          enum:
            - 'ON'
            - STANDBY
            - TOGGLE
    VolumeRequest:
      title: VolumeRequest
      type: object
      properties:
        volume:
          description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
          type: integer
          example: 11
    Error:
      title: Error
      description: |
        Prototype of a standard error object. This model contains the common fields
        that are present for all API errors. Generally, API  implementations will
        return a more specific error model that contains additional information
        about the exact error cause.
      type: object
      properties:
        code:
          type: string
          description: |
            A code that indicates the specific error that occurred. This code is
            generally more specific than the HTTP response code, and can be used
            to debug the source of an error.
          example: '10.32'
        guid:
          type: string
          description: |
            A unique ID that is associated with the API request. This ID should
            be provided when working with Bose support to debug any specific API
            errors.
          example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
        documentationUrl:
          type: string
          example: 'https://example.com/errors/10.32'
          description: |
            A reference to the API documentation offering more information about
            the specific error, including debug steps and any workarounds.
    AudioNotificationRequest:
      title: AudioNotificationRequest
      type: object
      properties:
        url:
          description: A URL pointing to an audio file that will be played. The file at this URL must be publicly-accessible.
          example: 'https://example.com/notification.mp3'
          type: string
        volumeOverride:
          description: 'The volume level at which the notification is played. This value is optional; if no volume is supplied then the notification will play at the same volume as the current content. If the product is muted, the audio notification will not play.'
          type: integer
          format: int32
      required:
        - url
    AudioNotificationPlaybackEnd:
      title: AudioNotificationPlaybackEnd
      type: object
      description: 'Information on the circumstances under which an audio notification ended. If the notification successfully played to completion, the status property will indicate `SUCCESS`, and the `details` property will not be present. In all other cases, the `details` property will contain a description of the unexpected termination.'
      properties:
        type:
          type: string
          description: The dynamic type of this response. This property allows clients to parse and interpret the remainder of the fields in the object.
          enum:
            - Response.PlaybackComplete
        status:
          type: string
          enum:
            - FAILURE
            - SUCCESS
        error:
          type: object
          properties:
            code:
              type: string
              description: |
                Value indicating the specific error cause.

                * `INTERRUPTED`: The notification started but was interrupted due to user action or higher priority sound (e.g. VPA request or alarm).
                * `UNEXPECTED_ERROR`: The notification failed due to some unknown issue.
              enum:
                - INTERRUPTED
                - UNEXPECTED_ERROR
            message:
              type: string
              description: |
                A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
            documentationUrl:
              type: string
              description: |
                A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
          required:
            - code
            - message
            - documentationUrl
      required:
        - status
    NowPlaying:
      type: object
      title: NowPlaying
      description: |-
        A representation of the content that is currently playing on a product. This data structure may either be retrieved synchronously by making an API call, or be delivered asynchronously as part of an event.
        The Now Playing data structure includes four top-level elements:
          - the `container` describes the capabilities and properties of the
          containt container. A container may be a playlist, an album, a radio
          station or so on.
          - the `metadata` gives information about the specific content item
          that is playing. If the `container` element of a given Now Playing
          structure describes a playlist or album, the `metadata` element would
          describe an individual track.
          - the `source` describes the input from which the content originates,
          such as an online audio stream, a bluetooth connection, or similar.
          - the `currentState` describes the playback settings of the product, as well
          as the capabilities that control which state transitions are available
          for the current content.

        When determining whether an operation is valid during playback, both the capabilities in the `container` and the `currentState` elements must be considered. An operation may be performed only if both the container and the current state allow it (i.e. the capability is a logical `AND` of the two boolean values). The API provides both values to allow clients to make decisions at both a global and a local level. For example, a GUI may choose whether to draw a 'next' button depending on the value of the `skipNextSupported` property in the `container` object, but may then indicate that the button is inactive in cases where `canSkipNext` in the `currentState` is `false` (such as when playing the final track in a playlist).
      properties:
        container:
          type: object
          title: NowPlayingContainer
          properties:
            capabilities:
              type: object
              title: NowPlayingCapabilities
              properties:
                repeatSupported:
                  description: Capability indicating whether the container may be played on repeat.
                  type: boolean
                  example: true
                shuffleSupported:
                  type: boolean
                  example: true
                skipNextSupported:
                  type: boolean
                  example: false
                skipPreviousSupported:
                  type: boolean
                  example: false
            containerArt:
              type: string
              example: 'https://images.example.com/container.png'
            containerName:
              type: string
              example: SPOTIFY
        metadata:
          title: NowPlayingTrackMetadata
          type: object
          properties:
            album:
              type: string
              example: Magical Mystery Tour (Remastered)
            artist:
              type: string
              example: The Beatles
            trackName:
              type: string
              example: Penny Lane - Remastered 2009
            trackArt:
              type: string
              example: 'https://images.example.com/track.png'
        source:
          title: NowPlayingSource
          type: object
          properties:
            sourceDisplayName:
              type: string
              example: Spotify
            sourceDisplayIcon:
              type: string
              example: 'https://images.example.com/img.png'
        currentState:
          title: NowPlayingState
          type: object
          properties:
            canPause:
              type: boolean
              example: true
            canSkipNext:
              type: boolean
              example: true
            canSkipPrevious:
              type: boolean
              example: true
            canShuffle:
              type: boolean
              example: true
            canStop:
              type: boolean
              example: false
            repeat:
              type: string
              enum:
                - ONE
                - ALL
                - 'OFF'
                - NOT_APPLICABLE
              example: 'OFF'
            shuffle:
              type: string
              enum:
                - 'ON'
                - 'OFF'
                - NOT_APPLICABLE
              example: 'OFF'
            playbackStatus:
              type: string
              enum:
                - PLAY
                - PAUSED
                - STOPPED
                - BUFFERING
                - ERROR
              example: PLAY
    NowPlayingContainer:
      type: object
      title: NowPlayingContainer
      properties:
        capabilities:
          type: object
          title: NowPlayingCapabilities
          properties:
            repeatSupported:
              description: Capability indicating whether the container may be played on repeat.
              type: boolean
              example: true
            shuffleSupported:
              type: boolean
              example: true
            skipNextSupported:
              type: boolean
              example: false
            skipPreviousSupported:
              type: boolean
              example: false
        containerArt:
          type: string
          example: 'https://images.example.com/container.png'
        containerName:
          type: string
          example: SPOTIFY
    NowPlayingSource:
      title: NowPlayingSource
      type: object
      properties:
        sourceDisplayName:
          type: string
          example: Spotify
        sourceDisplayIcon:
          type: string
          example: 'https://images.example.com/img.png'
    NowPlayingState:
      title: NowPlayingState
      type: object
      properties:
        canPause:
          type: boolean
          example: true
        canSkipNext:
          type: boolean
          example: true
        canSkipPrevious:
          type: boolean
          example: true
        canShuffle:
          type: boolean
          example: true
        canStop:
          type: boolean
          example: false
        repeat:
          type: string
          enum:
            - ONE
            - ALL
            - 'OFF'
            - NOT_APPLICABLE
          example: 'OFF'
        shuffle:
          type: string
          enum:
            - 'ON'
            - 'OFF'
            - NOT_APPLICABLE
          example: 'OFF'
        playbackStatus:
          type: string
          enum:
            - PLAY
            - PAUSED
            - STOPPED
            - BUFFERING
            - ERROR
          example: PLAY
    NowPlayingMetadata:
      title: NowPlayingTrackMetadata
      type: object
      properties:
        album:
          type: string
          example: Magical Mystery Tour (Remastered)
        artist:
          type: string
          example: The Beatles
        trackName:
          type: string
          example: Penny Lane - Remastered 2009
        trackArt:
          type: string
          example: 'https://images.example.com/track.png'
    NowPlayingCapabilities:
      type: object
      title: NowPlayingCapabilities
      properties:
        repeatSupported:
          description: Capability indicating whether the container may be played on repeat.
          type: boolean
          example: true
        shuffleSupported:
          type: boolean
          example: true
        skipNextSupported:
          type: boolean
          example: false
        skipPreviousSupported:
          type: boolean
          example: false
    ControlRequest:
      title: ControlRequest
      type: object
      properties:
        command:
          type: string
          enum:
            - RESUME
            - PAUSE
            - RESUME_PAUSE_TOGGLE
            - SKIP_NEXT
            - SKIP_PREVIOUS
    ShuffleRequest:
      title: ShuffleRequest
      type: object
      properties:
        shuffle:
          type: string
          enum:
            - 'ON'
            - 'OFF'
            - TOGGLE
    RepeatRequest:
      title: RepeatRequest
      type: object
      properties:
        repeat:
          type: string
          enum:
            - ONE
            - ALL
            - 'OFF'
  parameters:
    ProductIdPath:
      name: productID
      in: path
      required: true
      description: Description of the product ID
      schema:
        type: string
    ProductIdHeader:
      name: X-Product-ID
      in: header
      required: true
      description: Description of the product ID
      schema:
        type: string
    PresetIdPath:
      name: presetID
      in: path
      required: true
      description: Description of the preset ID
      schema:
        type: string
    UserIdHeader:
      name: X-User-ID
      in: header
      required: true
      description: Description of the user ID
      schema:
        type: string
    SourceIdPath:
      name: sourceID
      in: path
      required: true
      description: Description of the source ID
      schema:
        type: string
    ServiceAccountIdPath:
      name: serviceAccountID
      in: path
      required: true
      description: Description of the service account ID
      schema:
        type: string
    UserAgentHeader:
      name: User-Agent
      in: header
      required: true
      example: Bose%20Sample%20App/1.5.7-beta iOS/12.4.1
      description: |-
        A client identification string, as described in the Registration and Authentication Manual. User-Agent headers are used for metrics and compatibility reporting, not for access control. This header must contain a String that follows the pattern:

          `{Application}/{Version} {OS}/{Version} {HTTP Library}/{Version}`

        The OS and Library identifiers are optional, but recommended.
      schema:
        type: string
    RequestStateHeader:
      name: X-Request-State
      in: header
      required: false
      description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
      schema:
        type: string
    RequestIdHeader:
      name: X-Request-ID
      in: header
      required: true
      description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
      schema:
        type: string
    CallbackTokenHeader:
      name: X-Bose-Token
      in: header
      required: false
      description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
      schema:
        type: string
    ApiVersionHeader:
      name: X-API-Version
      in: header
      required: true
      example: '1'
      description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
      schema:
        type: string
    Fields:
      name: fields
      in: query
      required: false
      description: 'A comma-separated list of field names to return in the response body. Nested fields may be denoted using dot notation. If this parameter is not present, the response will contain the data as specified in each endpoint. If the fields parameter is present, the response will contain only those fields named in the parameter.'
      schema:
        type: array
        items:
          type: string
          description: TODO - The set of allowable fields will be specified per-endpoint once the data model is more mature.
  requestBodies:
    AudioNotificationRequestBody:
      required: true
      content:
        application/json:
          schema:
            title: AudioNotificationRequest
            type: object
            properties:
              url:
                description: A URL pointing to an audio file that will be played. The file at this URL must be publicly-accessible.
                example: 'https://example.com/notification.mp3'
                type: string
              volumeOverride:
                description: 'The volume level at which the notification is played. This value is optional; if no volume is supplied then the notification will play at the same volume as the current content. If the product is muted, the audio notification will not play.'
                type: integer
                format: int32
            required:
              - url
    MuteRequestBody:
      description: Description of the body parameter. Document that TOGGLE is best-effort.
      required: true
      content:
        application/json:
          schema:
            title: MuteRequest
            type: object
            properties:
              mute:
                type: string
                enum:
                  - 'ON'
                  - 'OFF'
                  - TOGGLE
    PowerRequestBody:
      description: Description of the body parameter. Document that TOGGLE is best-effort.
      required: true
      content:
        application/json:
          schema:
            title: PowerRequest
            type: object
            properties:
              power:
                type: string
                enum:
                  - 'ON'
                  - STANDBY
                  - TOGGLE
    VolumeRequestBody:
      description: Description of the body parameter
      required: true
      content:
        application/json:
          schema:
            title: VolumeRequest
            type: object
            properties:
              volume:
                description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
                type: integer
                example: 11
    ControlRequest:
      description: Description of the body parameter
      required: true
      content:
        application/json:
          schema:
            title: ControlRequest
            type: object
            properties:
              command:
                type: string
                enum:
                  - RESUME
                  - PAUSE
                  - RESUME_PAUSE_TOGGLE
                  - SKIP_NEXT
                  - SKIP_PREVIOUS
    SetShuffleRequest:
      description: Description of the body parameter
      required: true
      content:
        application/json:
          schema:
            title: ShuffleRequest
            type: object
            properties:
              shuffle:
                type: string
                enum:
                  - 'ON'
                  - 'OFF'
                  - TOGGLE
    SetRepeatRequest:
      description: Description of the body parameter
      required: true
      content:
        application/json:
          schema:
            title: RepeatRequest
            type: object
            properties:
              repeat:
                type: string
                enum:
                  - ONE
                  - ALL
                  - 'OFF'
  responses:
    GetNowPlayingResponse:
      description: The latest known content playing information.
      content:
        application/json:
          schema:
            type: object
            title: NowPlaying
            description: |-
              A representation of the content that is currently playing on a product. This data structure may either be retrieved synchronously by making an API call, or be delivered asynchronously as part of an event.
              The Now Playing data structure includes four top-level elements:
                - the `container` describes the capabilities and properties of the
                containt container. A container may be a playlist, an album, a radio
                station or so on.
                - the `metadata` gives information about the specific content item
                that is playing. If the `container` element of a given Now Playing
                structure describes a playlist or album, the `metadata` element would
                describe an individual track.
                - the `source` describes the input from which the content originates,
                such as an online audio stream, a bluetooth connection, or similar.
                - the `currentState` describes the playback settings of the product, as well
                as the capabilities that control which state transitions are available
                for the current content.

              When determining whether an operation is valid during playback, both the capabilities in the `container` and the `currentState` elements must be considered. An operation may be performed only if both the container and the current state allow it (i.e. the capability is a logical `AND` of the two boolean values). The API provides both values to allow clients to make decisions at both a global and a local level. For example, a GUI may choose whether to draw a 'next' button depending on the value of the `skipNextSupported` property in the `container` object, but may then indicate that the button is inactive in cases where `canSkipNext` in the `currentState` is `false` (such as when playing the final track in a playlist).
            properties:
              container:
                type: object
                title: NowPlayingContainer
                properties:
                  capabilities:
                    type: object
                    title: NowPlayingCapabilities
                    properties:
                      repeatSupported:
                        description: Capability indicating whether the container may be played on repeat.
                        type: boolean
                        example: true
                      shuffleSupported:
                        type: boolean
                        example: true
                      skipNextSupported:
                        type: boolean
                        example: false
                      skipPreviousSupported:
                        type: boolean
                        example: false
                  containerArt:
                    type: string
                    example: 'https://images.example.com/container.png'
                  containerName:
                    type: string
                    example: SPOTIFY
              metadata:
                title: NowPlayingTrackMetadata
                type: object
                properties:
                  album:
                    type: string
                    example: Magical Mystery Tour (Remastered)
                  artist:
                    type: string
                    example: The Beatles
                  trackName:
                    type: string
                    example: Penny Lane - Remastered 2009
                  trackArt:
                    type: string
                    example: 'https://images.example.com/track.png'
              source:
                title: NowPlayingSource
                type: object
                properties:
                  sourceDisplayName:
                    type: string
                    example: Spotify
                  sourceDisplayIcon:
                    type: string
                    example: 'https://images.example.com/img.png'
              currentState:
                title: NowPlayingState
                type: object
                properties:
                  canPause:
                    type: boolean
                    example: true
                  canSkipNext:
                    type: boolean
                    example: true
                  canSkipPrevious:
                    type: boolean
                    example: true
                  canShuffle:
                    type: boolean
                    example: true
                  canStop:
                    type: boolean
                    example: false
                  repeat:
                    type: string
                    enum:
                      - ONE
                      - ALL
                      - 'OFF'
                      - NOT_APPLICABLE
                    example: 'OFF'
                  shuffle:
                    type: string
                    enum:
                      - 'ON'
                      - 'OFF'
                      - NOT_APPLICABLE
                    example: 'OFF'
                  playbackStatus:
                    type: string
                    enum:
                      - PLAY
                      - PAUSED
                      - STOPPED
                      - BUFFERING
                      - ERROR
                    example: PLAY
    AsyncWebhookAck:
      description: Response from the webhook server to indicate that the data was received.
    CommandAcknowledgmentResponse:
      description: The request was accepted by the system. Note that this response does not indicate that the command modified the speaker's state - clients should monitor the asynchronous messaging channel for a response message indicating success or failure.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
        X-Request-ID:
          required: true
          description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
          schema:
            type: string
        X-Request-State:
          required: false
          description: Any custom state passed by the client in the X-Request-State header.
          schema:
            type: string
    ListProductsResponse:
      description: 'A paginated list of the Bose products available to the current user. <P> The data objects returned by this endpoint contain a summary of the information available for a given product. Clients that wish to obtain more information about an individual product should call `/products/{productID}`.'
      content:
        application/json:
          schema:
            title: ProductList
            type: object
            properties:
              results:
                type: array
                items:
                  title: ProductSummary
                  type: object
                  description: Summary of the information about a single product. More information is available by querying for a specific product.
                  properties:
                    connectionStatus:
                      description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                      type: string
                      example: CONNECTED
                      enum:
                        - CONNECTED
                        - DISCONNECTED
                    productID:
                      description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
                      example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
                      type: string
                    productName:
                      description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
                      example: Kitchen Speaker
                      type: string
              nextPageUrl:
                type: string
                description: |
                  A relative URL pointing to the next page of results. This link
                  contains all the information that a client will need to pass in
                  order to fetch the next set of results, and should not be parsed
                  or modified.
                  <P>
                  This link is present only if a later page of results exists. If the
                  response does not include this link, clients should assume that
                  the current page is the last page of results.
                  <P>
                  The API does not guarantee that the set of pages returned by
                  traversing next and previous lists will be consistent or complete
                  in the face of concurrent modifications. If a product is added or
                  removed between list calls, the result set may be missing products
                  or may contain the same product more than once.
              previousPageUrl:
                type: string
                description: |
                  A relative URL pointing to the previous page of results. This link
                  contains all the information that a client will need to pass in
                  order to fetch the next set of results, and should not be parsed
                  or modified.
                  <P>
                  This link is present only if a previous page of results exists. If
                  the response does not include this link, clients should assume that
                  the current page is the first page of results.
                  <P>
                  The API does not guarantee that the set of pages returned by
                  traversing next and previous lists will be consistent or complete
                  in the face of concurrent modifications. If a product is added or
                  removed between list calls, the result set may be missing products
                  or may contain the same product more than once.
            required:
              - results
    ListPresetsResponse:
      description: The presets available to a user on a Bose product
      content:
        application/json:
          schema:
            title: PresetMap
            type: object
            properties:
              '1':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
              '2':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
              '3':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
              '4':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
              '5':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
              '6':
                title: Preset
                type: object
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  presetID:
                    type: string
                  source:
                    type: string
                required:
                  - name
                  - presetID
                  - source
            example:
              '1':
                image: string
                name: string
                presetID: '1'
                source: SPOTIFY
              '2': null
              '3':
                image: string
                name: string
                presetID: '3'
                source: PANDORA
              '4': null
              '5': null
              '6': null
    GetPresetResponse:
      description: Information about a specific preset
      content:
        application/json:
          schema:
            title: Preset
            type: object
            properties:
              image:
                type: string
              name:
                type: string
              presetID:
                type: string
              source:
                type: string
            required:
              - name
              - presetID
              - source
    GetProductResponse:
      description: Information about a specific Bose product
      content:
        application/json:
          schema:
            title: Product
            type: object
            properties:
              settings:
                title: Settings
                type: object
                properties:
                  connectionStatus:
                    description: 'This property indicates whether the product is currently reachable by the cloud. A connected product is one to which Bose''s Smart Home servers can send messages, and which is periodically updating the representation of its state on the server. <P> A product''s connection status can change suddenly and unpredictably. The service will make a best effort attempt to keep the connection status of a product accurate. However, clients should be prepared to handle command failures or stale product state data, regardless of the connection status returned by a recent call. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                    type: string
                    example: CONNECTED
                    enum:
                      - CONNECTED
                      - DISCONNECTED
                  firmwareVersion:
                    description: The firmware version currently installed on the product.
                    type: string
                    example: 4.1.1-6679+cb4c111
                  mute:
                    description: 'The current mute setting. A product with a mute status of `ON` will continue to play the current content, but behaves as though the volume were set to zero. When mute is disabled (either via the Smart Home API or by some other user interaction) the product will play content at its current volume. <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.'
                    type: string
                    example: 'OFF'
                    enum:
                      - 'ON'
                      - 'OFF'
                  productName:
                    description: 'The user-assigned name of this product. Clients should assume that the product name is mutable, and should monitor for update events if they display a product name. <P> The product name is encoded as a variable-length UTF-8 string.'
                    example: Kitchen Speaker
                    type: string
                  power:
                    description: The current power setting. This field will not be present in the response payload if the product is not currently reachable by the cloud (i.e. if the `connectionStatus` property is set to `DISCONNECTED`). <P> Clients may assume that the enum values in the specification represent the complete set of values that may be returned for this property.
                    type: string
                    enum:
                      - 'ON'
                      - STANDBY
                  volume:
                    description: 'The current product volume. Note that this value is independent of the product''s mute status; a product with a `muteStatus` of `ON` will not play content, regardless of the volume level.'
                    type: integer
                    example: 11
              productID:
                description: 'A globally-unique identifier for this product, used as the canonical means to identify a product. The product ID is an opaque string and is not considered to be user-facing.'
                example: d1f799a2-08c5-4fb8-bfab-5db16a378caf
                type: string
              capabilities:
                title: ProductCapabilities
                type: object
                properties:
                  canAudioNotify:
                    type: boolean
                    description: Boolean flag indicating whether the product has the ability to play audio notifications.
                  canMute:
                    type: boolean
                  hasPresets:
                    type: boolean
                  supportedPowerSettings:
                    type: array
                    items:
                      type: string
                      enum:
                        - 'ON'
                        - STANDBY
                  volumeMax:
                    description: 'The maximum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
                    type: integer
                    format: int32
                    example: 100
                  volumeMin:
                    description: 'The minimum volume level supported by the product. Note that this volume is a relative value, and does not represent a decibel level.'
                    type: integer
                    format: int32
                    example: 0
                required:
                  - canAudioNotify
                  - volumeMax
                  - volumeMin
            required:
              - settings
              - nowPlaying
              - presets
              - productID
              - capabilities
    BadRequestErrorResponse:
      description: 'The request was badly-formed, or the server was unable to parse some part of the input. This error response requires that the client modify the request before retrying. Repeating the request with the same parameters will not result in a successful response.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
              message:
                type: string
                description: |
                  A developer-facing message indicating the cause of an error
                  and potentially suggesting ways to fix it. For example, an
                  error caused by a missing required parameter may include the
                  name of the parameter that was missing.
                  <P>
                  This message should not be displayed directly to the end user.
                example: 'Parameter "paramName" was the wrong type. Expected an array, got a string.'
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
    UnauthorizedErrorResponse:
      description: 'The request has been rejected because the client did not provide one or more of the required authentication headers. See the descriptions for of the `X-User-Token`, `User-Agent` and `X-ApiKey` headers, or the Registration and Authentication Manual'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
              message:
                type: string
                description: |
                  A developer-facing message indicating the cause of an error
                  and potentially suggesting ways to fix it. In the case of an
                  Unauthorized error, this message will include the name of any
                  missing headers.
                  <P>
                  This message should not be displayed directly to the end user.
                example: Header "X-User-Token" is required.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
    ForbiddenErrorResponse:
      description: 'The request has been rejected because one or more of the required authentication headers are invalid. A client should obtain a new token before retrying the request. For more details on the required tokens, see the Registration and Authentication Manual.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
              message:
                type: string
                description: |
                  A developer-facing message indicating the cause of an error
                  and potentially suggesting ways to fix it. In the case of a
                  Forbidden error, this message will include the name of any
                  invalid headers.
                  <P>
                  This message should not be displayed directly to the end user.
                example: Header "X-User-Token" is invalid.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
    NotFoundErrorResponse:
      description: 'The request has failed because it refers to a resource that does not exist, or is not accessible by the current user.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
              message:
                type: string
                description: |
                  A developer-facing message indicating the cause of an error
                  and potentially suggesting ways to fix it. In the case of a
                  Not Found error, this message will indicate which resource was
                  not accessible.
                  <P>
                  This message should not be displayed directly to the end user.
                example: Product "9e7d220e-518e-4e21-bab6-2c5895a8347e" not found.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
    TooManyRequestsErrorResponse:
      description: 'The client has made too many requests over a given time period, and should back off before making further API requests. The response headers will give guidance on the back off algorithm that should be employed by the client.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
        Retry-After:
          required: true
          description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
          schema:
            type: string
        X-Retry-Count:
          required: true
          description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
          schema:
            type: string
        X-Retry-Behavior:
          required: true
          description: |
            This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
          schema:
            type: string
    InternalServerErrorResponse:
      description: 'Some unexpected error occurred while processing the request. The client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
              message:
                type: string
                description: |
                  A developer-facing message indicating the cause of an error
                  and potentially suggesting ways to fix it. This message may
                  include information that would be useful when working with
                  Bose support to debug a persistent error.
                  <P>
                  This message should not be displayed directly to the end user.
                example: Unexpected error 10.32 occurred. Please contact support.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
        Retry-After:
          required: true
          description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
          schema:
            type: string
        X-Retry-Count:
          required: true
          description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
          schema:
            type: string
        X-Retry-Behavior:
          required: true
          description: |
            This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
          schema:
            type: string
    ServiceUnavailableErrorResponse:
      description: 'The service is currently unavailable. A client may retry the same request again, after a suitable back off period, and may receive a successful response. The response headers will give guidance on the back off algorithm that should be employed by the client.'
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A code that indicates the specific error that occurred. This code is
                  generally more specific than the HTTP response code, and can be used
                  to debug the source of an error.
                example: '10.32'
              guid:
                type: string
                description: |
                  A unique ID that is associated with the API request. This ID should
                  be provided when working with Bose support to debug any specific API
                  errors.
                example: dbf0e13f-76dd-46b7-8f40-07f52f72c629
              documentationUrl:
                type: string
                example: 'https://example.com/errors/10.32'
                description: |
                  A reference to the API documentation offering more information about
                  the specific error, including debug steps and any workarounds.
      headers:
        X-API-Warn:
          required: false
          description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
          schema:
            type: string
        Retry-After:
          required: true
          description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
          schema:
            type: string
        X-Retry-Count:
          required: true
          description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
          schema:
            type: string
        X-Retry-Behavior:
          required: true
          description: |
            This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
          schema:
            type: string
  headers:
    DeprecationWarningHeader:
      required: false
      description: 'This header is used by the server to indicate that the client has called one or more deprecated API endpoints, or has used parameters or properties that are deprecated. An empty (or missing) header value indicates indicates that the endpoint has not been deprecated. The header will contain a space-separated list of URLs that contain information about the deprecated APIs. Clients should monitor this header to receive early automatic notification of any deprecation warnings.'
      schema:
        type: string
    ApiVersionHeader:
      required: true
      description: The major API version that the server is using (details TBD).
      schema:
        type: string
    RetryAfterHeader:
      required: true
      description: 'This is a standard HTTP header (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After) and will be specified as a non-negative decimal integer. This number returned in the failed response is the number of seconds to wait before attempting a retry of the same request.'
      schema:
        type: string
    RetryCountHeader:
      required: true
      description: 'This is Bose-specific, and non-standard. It should be specified as a decimal integer. A value of 0 should be interpreted as "do not retry this request". A positive integer should be interpreted by the client as the number of times that a retry should be attempted before abandoning the request. Any negative integer (generally specified as -1) indicates that the retries can continue indefinitely until a successful response is received.'
      schema:
        type: string
    RetryBehaviorHeader:
      required: true
      description: |
        This is Bose-specific, and non-standard. It should be specified as a string with one of two values. exponential - indicates that each retry multiply the Retry-After header's value by 2 ^ (current retry attempt - 1).  For example, the third retry of a request that responds with a Retry-After value of 15 should delay for 60 seconds (15 * 4, as 23-1 = 22 = 4) constant - indicates that each subsequent retry should be attempted per the value set in the Retry-After header. Irrespective of whether the behavior returned is constant or exponential, it's highly recommended that each client introduce an element of randomness into the pause before retrying. A ±33% randomness factor would be good, but other values can be chosen. For example, a Retry-Header of 10 sent to a client with a ±20% randomness factor would indicate that the client could respond anywhere from 8 to 12 seconds after the previous attempt"
      schema:
        type: string
    RequestIdHeader:
      required: true
      description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
      schema:
        type: string
    RequestStateHeader:
      required: false
      description: Any custom state passed by the client in the X-Request-State header.
      schema:
        type: string
  callbacks:
    AsyncResponseCallback:
      post:
        operationId: asyncResponse
        description: Asynchronous event generated in response to a previous request. This response is sent only to the client that created the original request.
        requestBody:
          content:
            application/json:
              schema:
                title: AsynchronousResponse
                type: object
                description: |
                  Common format for asynchronous response messages. This message will be generated at some point after a request was sent and acknowledged with a 202 (Accepted) response.
                properties:
                  type:
                    type: string
                    enum:
                      - Response.Status
                  status:
                    type: string
                    enum:
                      - FAILURE
                      - SUCCESS
                  error:
                    title: AsynchronousCommandError
                    properties:
                      code:
                        type: string
                        description: Description of the error code scheme
                      message:
                        type: string
                        description: |
                          A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                      documentationUrl:
                        type: string
                        description: |
                          A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                    required:
                      - code
                      - message
                      - documentationUrl
                required:
                  - status
                  - type
        parameters:
          - name: X-API-Version
            in: header
            required: true
            example: '1'
            description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
            schema:
              type: string
          - name: X-Request-ID
            in: header
            required: true
            description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
            schema:
              type: string
          - name: X-Request-State
            in: header
            required: false
            description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
            schema:
              type: string
          - name: X-Bose-Token
            in: header
            required: false
            description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
            schema:
              type: string
          - name: X-Product-ID
            in: header
            required: true
            description: Description of the product ID
            schema:
              type: string
          - name: X-User-ID
            in: header
            required: true
            description: Description of the user ID
            schema:
              type: string
        responses:
          '204':
            description: Response from the webhook server to indicate that the data was received.
    AudioNotificationAsyncResponseCallback:
      post:
        operationId: audioNotificationAsyncResponse
        description: |
          Asynchronous event generated in response to an audio notification
          playback request. This response is sent only to the client that
          created the original request.
        requestBody:
          description: Event payload
          content:
            application/json:
              schema:
                title: AsynchronousResponse
                type: object
                description: |
                  Common format for asynchronous response messages. This
                  message will be generated at some point after a request
                  was sent and acknowledged with a 202 (Accepted) response.
                properties:
                  type:
                    type: string
                    description: The dynamic type of this response. This property allows clients to parse and interpret the remainder of the fields in the object.
                    enum:
                      - Response.Status
                  status:
                    type: string
                    enum:
                      - FAILURE
                      - SUCCESS
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: |
                          Value indicating the specific error cause.

                          * `BUSY`: The notification failed (or was not started) because higher-priority content, such as a VPA or other notification, was already playing.
                          * `UNEXPECTED_ERROR`: The notification failed (or was not started) due to some unknown issue.
                          <P>
                          Not all media types are supported; a future
                          release of the SmartHome API will include an error
                          code indicating that an unsupported media type
                          was supplied.
                        enum:
                          - BUSY
                          - UNEXPECTED_ERROR
                      message:
                        type: string
                        description: |
                          A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                      documentationUrl:
                        type: string
                        description: |
                          A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                    required:
                      - code
                      - message
                      - documentationUrl
                required:
                  - status
                  - type
        parameters:
          - name: X-API-Version
            in: header
            required: true
            example: '1'
            description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
            schema:
              type: string
          - name: X-Request-ID
            in: header
            required: true
            description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
            schema:
              type: string
          - name: X-Bose-Token
            in: header
            required: false
            description: 'Token value to be returned with all asynchronous messages from Bose''s servers to a client listener. This token is configured in the developer portal, and is not parsed by Bose.'
            schema:
              type: string
          - name: X-Product-ID
            in: header
            required: true
            description: Description of the product ID
            schema:
              type: string
          - name: X-User-ID
            in: header
            required: true
            description: Description of the user ID
            schema:
              type: string
        responses:
          '204':
            description: Response from the webhook server to indicate that the data was received.
    AudioNotificationPlaybackEndCallback:
      post:
        operationId: audioNotificationPlaybackEnd
        description: 'Asynchronous event generated in to indicate that a previously-created audio notification has stopped playing. The notification may have completed successfully or failed due to being interrupted, overridden or some other error. Developers should check the callback body for details on the conditions under which the playback ended. <P> This response is sent only to the client that created the original request. <P> Note that delivery of this response is not guaranteed; unexpected issues such as power failure or network errors may lead to a notification playback ending without an associated message. Developers should assume failure if an audio notification request times out without a callback.'
        requestBody:
          content:
            application/json:
              schema:
                title: AudioNotificationPlaybackEnd
                type: object
                description: 'Information on the circumstances under which an audio notification ended. If the notification successfully played to completion, the status property will indicate `SUCCESS`, and the `details` property will not be present. In all other cases, the `details` property will contain a description of the unexpected termination.'
                properties:
                  type:
                    type: string
                    description: The dynamic type of this response. This property allows clients to parse and interpret the remainder of the fields in the object.
                    enum:
                      - Response.PlaybackComplete
                  status:
                    type: string
                    enum:
                      - FAILURE
                      - SUCCESS
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: |
                          Value indicating the specific error cause.

                          * `INTERRUPTED`: The notification started but was interrupted due to user action or higher priority sound (e.g. VPA request or alarm).
                          * `UNEXPECTED_ERROR`: The notification failed due to some unknown issue.
                        enum:
                          - INTERRUPTED
                          - UNEXPECTED_ERROR
                      message:
                        type: string
                        description: |
                          A localized message intended to be read by a developer indicating what the error was and suggesting ways to fix it.
                      documentationUrl:
                        type: string
                        description: |
                          A link to the page in the documentation that discusses this specific error. There should be at least one documentation page for every error code.
                    required:
                      - code
                      - message
                      - documentationUrl
                required:
                  - status
        parameters:
          - name: X-API-Version
            in: header
            required: true
            example: '1'
            description: 'The API version that the client wishes to use for this call, as described in the Versioning and Deprecation Policy. This header must contain the string representation of a single integer value, indicating a major version number (i.e. the part of a published API version number before the first period). <P> The server guarantees that a major API version will be supported up to any published end-of-life date, and so clients may specify that API calls should follow the standards and semantics that were in place for a given version, even during its deprecation period. Once the end-of-life date has passed, the server makes no guarantees that an old API version will be supported, and may reject any requests with that major version number.'
            schema:
              type: string
          - name: X-Request-ID
            in: header
            required: true
            description: 'Unique identifier for the request. This ID is generated by the server, and is returned with all synchronous and asynchronous responses related to a single request.'
            schema:
              type: string
          - name: X-Request-State
            in: header
            required: false
            description: 'Optional client state to be associated with this request. If provided, the state will be returned with any asynchronous response generated for this request. Note that this state be sent only to the client that defined it, and will not be passed with any notifications triggered by the request. The server does not attempt to parse or interpret this value in any way - it is treated as an opaque token.'
            schema:
              type: string
        responses:
          '204':
            description: Response from the webhook server to indicate that the data was received.
  securitySchemes:
    App API Key:
      type: apiKey
      description: |
        The Application-scoped API key issued by Bose to the Application developer.
      name: X-ApiKey
      in: header
    User Token:
      type: apiKey
      description: |
        The User-scoped token issued by Bose cloud infrastructure in response to a user authentication workflow.
      name: X-User-Token
      in: header
